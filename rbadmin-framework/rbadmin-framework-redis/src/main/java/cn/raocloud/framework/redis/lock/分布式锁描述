唯一确定线程条件：
    MAC地址+JVM进程ID+线程ID 在分布式环境中可以唯一确定线程

分布式锁满足一下条件：
 1、互斥性，在任意时刻，只能有一个客户端(或者说业务请求)获取锁，并且也只能有该客户端释放锁
 2、可重入：避免一个线程中请求相同资源加锁而导致死锁情况
 3、自动过期：获取锁的客户端崩溃没有释放锁，也能保证锁正常过期，后续的客户端能正常获取锁
 4、自旋重试：获取不到锁时不直接返回错误，而是支持一定周期的自旋重试，超过总等待时间还没有获取锁才返回错误
 5、续租：任务执行时间超过过期时间时，可以对锁的过期时间进行续租，直到任务完成

基于Zookeeper实现分布式锁流程分析：
 1、每个线程获取锁就在Zookeeper服务器上创建一个临时顺序节点，比如在/distributedLock目录下
 2、创建节点成功后，获取/distributedLock目录下的所有临时节点
 3、在判断当前线程创建的节点是否是所有的节点的序号的最小节点，是则认为获取锁成功，不是则对节点序号的前一个节点添加Watch监听并阻塞
 4、当前线程释放锁后断开与Zookeeper服务器的连接，连接断开后对应的临时顺序节点会自动删除，触发Watch监听事件唤醒下一个线程，执行步骤3